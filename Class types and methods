CLASSES TYPES---------------------------------------------------------------------------------------------------------------------------
Types:
1. Regular class     -> general purpose OOP
2. Dataclass         -> Structured data containers
3. Abstract class    -> enforce subclass
4. Static class
5. Singleton
6. Metaclass         -> class that control other classes
7. Enum              -> fixed set of constants
8. NameTuple/TypedDict




2. Dataclass -> from dataclasses import dataclass
             -> use @dataclass decorator
             -> auto generates _int_(constructor),_repr_(string representation),_eq_(comparision)
             -> sometimes generates _hash_,_it_
             -> it works as classes attributes but with less code

3. Abstract class -> from abc import ABC
                  -> blueprint for other classes
                  -> can have normal methods and abstracts methods (methods that must be implemented by child classes)
7. Enum class     -> consist of:
                     name - for human and code readability
                     values - for machines (storage, transmission,comparison)
                  -> acts like classes attributes with fixed values
                     and these are choices stored in databases as actual values (integers,strings or codes)
                     The connection is about mapping Enum members to database columns.
                     If databses vales change, enum centralized mapping
                  -> provides safety,uniqueness and clarity






@property decorator -> use method like an attribute #todo different methods
                    -> use when have attributes for real-only or computed values
                    -> hides method calls from the user


